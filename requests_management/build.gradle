plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4' // ✅ Downgraded to compatible version
	id 'io.spring.dependency-management' version '1.1.7' // ✅ Matching spring-boot version
}

group = 'com.gdc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	// Spring Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security' // Security for JWT
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'io.github.openfeign:feign-hystrix:11.10'
	implementation 'org.json:json:20240303'

	// Eureka Client (not Server here)
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// Swagger/OpenAPI 3
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// PostgreSQL driver
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT Support
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // for parsing JSON
// For JWT token creation and parsing

	// Testing
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}